{"version":3,"sources":["components/404/NotFound.js","services/index.js","components/history/History.js","components/navbar/NavBar.js","components/landingpage/LandingPage.js","components/dashboard/CompanyDetails.js","components/dashboard/Dashboard.js","components/pipeline/Pipeline.js","App.js","serviceWorker.js","index.js"],"names":["NotFound","baseURL","createBrowserHistory","window","location","origin","service","axios","create","withCredentials","actions","isLoggedIn","a","get","signUp","user","post","logIn","logOut","getLeadsFromMaster","NavBar","state","loginToggle","signUpToggle","handleChange","e","setState","target","name","value","handleLoginSubmit","preventDefault","data","email","password","then","console","log","props","setUser","masterLeads","history","push","catch","response","error","displayLoginForm","className","action","onSubmit","placeholder","type","onChange","handleSignUpSubmit","displaySignUpForm","res","createdAt","updatedAt","_id","style","color","this","JSON","stringify","src","alt","to","onClick","Component","LandingPage","CompanyDetails","addLeadToContactedArray","contactedLead","contactedLeads","includes","selectedLead","businessName","href","phoneNumber","city","Dashboard","index","nextLead","displayLead","Array","from","length","_","i","key","Pipeline","displayContactedLeads","map","each","App","exact","path","render","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.410e4e22.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n\t? //? (baseURL = 'here should be your production endpoint')\n\t\t(baseURL = window.location.origin)\n\t: (baseURL = 'http://localhost:5000');\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nconst actions = {\n\tisLoggedIn: async () => {\n\t\treturn await service.get('/is-logged-in');\n\t},\n\tsignUp: async (user) => {\n\t\treturn await service.post('/signup', user);\n\t},\n\tlogIn: async (user) => {\n\t\treturn await service.post('/login', user);\n\t},\n\tlogOut: async () => {\n\t\treturn await service.get('/logout');\n\t},\n\tgetLeadsFromMaster: async () => {\n\t\treturn await service.get('/master-leads');\n\t}\n};\n\nexport default actions;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport history from '../history/History';\nimport actions from '../../services/index';\n\nclass NavBar extends Component {\n\tstate = {\n\t\tloginToggle: true,\n\t\tsignUpToggle: true\n\t};\n\n\thandleChange = (e) => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t};\n\n\thandleLoginSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tlet data = {\n\t\t\temail: this.state.email,\n\t\t\tpassword: this.state.password\n\t\t};\n\n\t\tactions\n\t\t\t.logIn(data)\n\t\t\t.then((user) => {\n\t\t\t\tconsole.log(user);\n\n\t\t\t\tthis.props.setUser({ ...user.data.user, masterLeads: user.data.masterLeads });\n\n\t\t\t\tconsole.log('got the master leads');\n\t\t\t\tthis.setState({\n\t\t\t\t\tloginToggle: !this.state.loginToggle\n\t\t\t\t});\n\t\t\t\tconsole.log(this);\n\n\t\t\t\thistory.push('/dashboard');\n\t\t\t})\n\t\t\t.catch(({ response }) => console.error(response));\n\t};\n\n\tdisplayLoginForm = () => {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<form className=\"nav-form\" action=\"/dashboard\" onSubmit={this.handleLoginSubmit}>\n\t\t\t\t\t<input name=\"email\" placeholder=\"email\" type=\"email\" onChange={this.handleChange} />\n\t\t\t\t\t<input name=\"password\" placeholder=\"password\" type=\"password\" onChange={this.handleChange} />\n\t\t\t\t\t<input type=\"submit\" value=\"Log In\" />\n\t\t\t\t</form>\n\t\t\t</Fragment>\n\t\t);\n\t};\n\n\thandleSignUpSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tactions\n\t\t\t.signUp(this.state)\n\t\t\t.then((user) => {\n\t\t\t\tthis.props.setUser({ ...user.data.user });\n\t\t\t\tthis.setState({\n\t\t\t\t\tsignUpToggle: !this.state.signUpToggle\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(({ response }) => console.error(response.data));\n\t};\n\n\tdisplaySignUpForm = () => {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<form className=\"nav-form\" onSubmit={this.handleSignUpSubmit}>\n\t\t\t\t\t<input name=\"email\" type=\"email\" placeholder=\"email\" onChange={this.handleChange} />\n\t\t\t\t\t<input name=\"password\" placeholder=\"password\" type=\"password\" onChange={this.handleChange} />\n\t\t\t\t\t<input type=\"submit\" value=\"Sign Up\" />\n\t\t\t\t</form>\n\t\t\t</Fragment>\n\t\t);\n\t};\n\n\tlogOut = async () => {\n\t\tlet res = await actions.logOut();\n\t\tconsole.log('logout was called', res);\n\n\t\tthis.props.setUser({ email: null, createdAt: null, updatedAt: null, _id: null, masterLeads: null }); //FIX\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<span style={{ color: 'red' }}>temporary: {(this.props.email, JSON.stringify(this.props))}</span>\n\n\t\t\t\t{this.props.email ? (\n\t\t\t\t\t<nav className=\"NavBar\">\n\t\t\t\t\t\t<span className=\"nav-emblem\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"emblem-img\"\n\t\t\t\t\t\t\t\tsrc=\"https://cdn0.iconfinder.com/data/icons/mining-glyph/100/mining-29-512.png\"\n\t\t\t\t\t\t\t\talt=\"emblem\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"nav-links\">\n\t\t\t\t\t\t\t<Link to=\"/dashboard\">Dashboard</Link>\n\t\t\t\t\t\t\t<Link to=\"/pipeline\">Pipeline</Link>\n\t\t\t\t\t\t\t<Link to=\"/\" onClick={this.logOut}>\n\t\t\t\t\t\t\t\tSign Out\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</nav>\n\t\t\t\t) : (\n\t\t\t\t\t<nav className=\"NavBar\">\n\t\t\t\t\t\t<span className=\"nav-emblem\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"emblem-img\"\n\t\t\t\t\t\t\t\tsrc=\"https://cdn0.iconfinder.com/data/icons/mining-glyph/100/mining-29-512.png\"\n\t\t\t\t\t\t\t\talt=\"emblem\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span className=\"nav-links\">\n\t\t\t\t\t\t\t{this.state.loginToggle ? (\n\t\t\t\t\t\t\t\t<Link onClick={() => this.setState({ loginToggle: !this.state.loginToggle })} to=\"/\">\n\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tthis.displayLoginForm()\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{this.state.signUpToggle ? (\n\t\t\t\t\t\t\t\t<Link onClick={() => this.setState({ signUpToggle: !this.state.signUpToggle })} to=\"/\">\n\t\t\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tthis.displaySignUpForm()\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</nav>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\n\nclass LandingPage extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"LandingPage\">\n\t\t\t\t\t<div className=\"landing-photo\">\n\t\t\t\t\t\t<div className=\"landing-logo\">\n\t\t\t\t\t\t\t<strong>LeadMiner</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"features\">\n\t\t\t\t\t\t\t<div className=\"landing-feature\">\n\t\t\t\t\t\t\t\t<h2>Fresh Leads</h2>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tOur software is created to mine small business information that is brand new, with\n\t\t\t\t\t\t\t\t\tlittle to no web-presence.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"landing-feature\">\n\t\t\t\t\t\t\t\t<h2>Close Deals</h2>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tWith having a consistent pipeline of new leads coming in, you'll find yourself\n\t\t\t\t\t\t\t\t\tgenerating more revenue and closing more deals!\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"landing-feature\">\n\t\t\t\t\t\t\t\t<h2>Retain Clients</h2>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tLeadMiner will let you become more organized with your workload and let you increase\n\t\t\t\t\t\t\t\t\tclient retention by keeping notes and following up to client requests.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default LandingPage;\n","import React, { Component } from 'react';\n\nclass CompanyDetails extends Component {\n\taddLeadToContactedArray = () => {\n\t\tlet contactedLead = this.props.user.contactedLeads;\n\n\t\tif (contactedLead.includes(this.props.selectedLead)) {\n\t\t\tconsole.log('this lead exists');\n\t\t} else {\n\t\t\tcontactedLead.push(this.props.selectedLead);\n\n\t\t\tconsole.log(`i added ${this.props.selectedLead.businessName} to my contacted leads array`);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"CompanyDetail\">\n\t\t\t\t{this.props.selectedLead ? (\n\t\t\t\t\t<div className=\"selected-company\">\n\t\t\t\t\t\t<div className=\"selected-content\">\n\t\t\t\t\t\t\t<h3>{this.props.selectedLead.businessName}</h3>\n\t\t\t\t\t\t\t<a href={`tel:${this.props.selectedLead.phoneNumber}`}>\n\t\t\t\t\t\t\t\t{this.props.selectedLead.phoneNumber}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<h4>{`${this.props.selectedLead.city}, ${this.props.selectedLead.state}`}</h4>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button className=\"selected-button\" onClick={this.addLeadToContactedArray}>\n\t\t\t\t\t\t\t+\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'NO LEAD SELECTED'\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CompanyDetails;\n","import React, { Component, Fragment } from 'react';\nimport CompanyDetails from './CompanyDetails';\nimport actions from '../../services';\n\nclass Dashboard extends Component {\n\tstate = {\n\t\tindex: 0\n\t};\n\n\tnextLead = () => {\n\t\tthis.setState({\n\t\t\tindex: this.state.index + 1\n\t\t});\n\t};\n\n\tdisplayLead = () => {\n\t\tlet masterLeads = this.props.user.masterLeads;\n\t\treturn Array.from({ length: 3 }, (_, i) => {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tkey={i}\n\t\t\t\t\tclassName=\"lead-segment\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tselectedLead: masterLeads[this.state.index + i]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() => console.log(this.state)\n\t\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<h3>{masterLeads[this.state.index + i].businessName}</h3>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Dashboard\">\n\t\t\t\t<div className=\"dashboard-content\">\n\t\t\t\t\t{this.props.user.masterLeads ? this.displayLead() : ''}\n\t\t\t\t\t<div className=\"dashboard-button\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tonClick={this.nextLead}\n\t\t\t\t\t\t\talt=\"right button\"\n\t\t\t\t\t\t\tsrc=\"https://i.ya-webdesign.com/images/white-arrow-transparent-png-1.png\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<CompanyDetails selectedLead={this.state.selectedLead} user={this.props.user} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\n\nclass Pipeline extends Component {\n\tdisplayContactedLeads = () => {\n\t\tlet contactedLeads = this.props.user.contactedLeads;\n\n\t\treturn contactedLeads.map((each) => {\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h4>{each.businessName}</h4>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Pipeline\">\n\t\t\t\t<h3 className=\"pipeline-title\">MY PIPELINE INCLUDES THESE LEADS:</h3>\n\t\t\t\t<ul>{this.props.user.contactedLeads ? this.displayContactedLeads() : ''}</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Pipeline;\n","import React, { Component, Fragment } from 'react';\nimport { Router, Switch, Route, Link } from 'react-router-dom';\nimport NotFound from './components/404/NotFound.js';\nimport NavBar from './components/navbar/NavBar';\nimport LandingPage from './components/landingpage/LandingPage.js';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Pipeline from './components/pipeline/Pipeline';\n\nimport history from './components/history/History';\nimport actions from './services/index';\n\nclass App extends Component {\n\tstate = {};\n\n\tasync componentDidMount() {\n\t\tactions\n\t\t\t.isLoggedIn()\n\t\t\t.then((user) => {\n\t\t\t\tconsole.log(user.data);\n\n\t\t\t\tthis.setUser({ ...user.data.user, masterLeads: user.data.masterLeads });\n\n\t\t\t\tconsole.log('got the master leads');\n\t\t\t\tthis.setState({\n\t\t\t\t\tloginToggle: !this.state.loginToggle\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(({ response }) => console.error(response));\n\t}\n\n\tsetUser = (user) => {\n\t\tconsole.log('set user called', user);\n\t\tif (user._id)\n\t\t\tthis.setState({\n\t\t\t\t...user\n\t\t\t});\n\t\telse history.push('/');\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Router history={history}>\n\t\t\t\t<NavBar setUser={this.setUser} email={this.state.email} />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" render={(props) => <LandingPage {...props} email={this.state.email} />} />\n\t\t\t\t\t<Route exact path=\"/dashboard\" render={(props) => <Dashboard {...props} user={this.state} />} />\n\t\t\t\t\t<Route exact path=\"/pipeline\" render={(props) => <Pipeline {...props} user={this.state} />} />\n\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}